
# GFORTRAN
export FC = gfortran

# Fortran compiler flags
export FCFLAGS = -O3 -std=f2008 -ffree-line-length-none -march=native
export FCFLAGS = -O3 -std=f2008 -ffree-line-length-none -m64 -march=native -funroll-loops
export FCFLAGS = -O3 -std=f2008 -ffree-line-length-none -m64 -march=native --fast-math  -funroll-loops 
# export FCFLAGS = -Ofast -std=f2008 -ffree-line-length-none -m64 -march=native

# export FCFLAGS = -O3 -std=f2008 -ffree-line-length-none -m64 -march=native --fast-math
# export FCFLAGS = -O3 -std=f2008 -ffree-line-length-none -m64 -march=native --fast-math -funroll-loops -ftree-loop-linear -fprefetch-loop-arrays
# Debugging
# export FCFLAGS = -std=f2008 -ffree-line-length-none -m64 -march=native -pedantic -g -fbounds-check -Wall -fbacktrace -finit-real=nan

export TIME_DIR = /home/peter/gptl-gcc
export BLASLIB  = blis-amd
export BLAS_DIR = $(HOME)/blis-amd

#export BLASLIB=openblas

# export BLAS_DIR =  $(HOME)/blis
# export TIME_DIR = /data/puk/soft/gptl/


# INTEL
# export FC = ifort
# export FCFLAGS = -O1 -mkl=sequential -heap-arrays -I${MKLROOT}/include
#export FCFLAGS = -O3 -mkl=sequential -heap-arrays -I${MKLROOT}/include
# export FCFLAGS = -O3 -mkl=sequential  -I${MKLROOT}/include
#export FCFLAGS = -O0 -g -traceback -check all -warn interface -fp-stack-check -mkl -I${MKLROOT}/include

# export TIME_DIR = /home/puk/gptl-ifort/


# # PGI
# export FC = pgfortran
# # CPU
# export FCFLAGS = -O3 
# export TIME_DIR = /home/peter/gptl-pgi/
# export BLASLIB  = blis-amd
# export BLAS_DIR = $(HOME)/blis-amd
# debugging
# export FCFLAGS=  -g  -traceback  -Minfo -Mbounds -Mchkptr -Mstandard -Kieee -Mchkstk -Ktrap=fp


#  ------- GPU ----------
## export FC = pgfortran
## export FCFLAGS = -O3 -g  -Mallocatable=03 -ta=tesla:cc60 -Minfo -Mpreprocess -Mcuda -Mcudalib=cublas
## export FCFLAGS = -O3 -ta=tesla:cc60  -Mcuda -Mcudalib=cublas

# export FC = nvfortran 
# export FCFLAGS = -fast -g -acc=gpu -ta=tesla  -Mcuda -Mcudalib=cublas

# export FCFLAGS =  -g -acc=gpu -ta=tesla:cc60 -traceback -Mcuda -Mcudalib=cublas

# # debugging
#export FCFLAGS = -g -ta=tesla:lineinfo  -traceback  -Mcuda -Mcudalib=cublas
#export FCFLAGS = -g -ta=tesla:cc60  -Minfo=all -traceback -Mchkfpstk -Mchkstk -Mdalign -Mdclchk -Mdepchk -Miomutex -Mrecursive -Msave -Ktrap=fp -O0 -byteswapio -Mallocatable=03 -Mcuda -Mcudalib=cublas
#export FCFLAGS = -g -ta=tesla:cc60  -Minfo=all -traceback -Mchkfpstk -Mchkstk -Mdalign -Mchkptr  -Mdclchk -Mstandard -Mdepchk -Mrecursive  -Kieee -Ktrap=fp -Mallocatable=03 -Mpreprocess -Mcuda -Mcudalib=cublas
#export FCFLAGS = -g  -Minfo=all -traceback -Mchkfpstk -Mchkstk -Mdalign -Mchkptr  -Mdclchk -Mstandard -Mdepchk -Mrecursive  -Kieee -Ktrap=fp -Mallocatable=03 -Mpreprocess -Mcuda -Mcudalib=cublas


# PGI should have a deep copy feature since 18.7, but does not seem to be working with the derived type mod_layer/mod_network, so the code uses manual deep copy
# export FCFLAGS = -g -ta=tesla:cc60,deepcopy -Minfo -Mbounds -Mchkptr -Mstandard -Kieee -Mchkstk -Mallocatable=03 -Mpreprocess -Mcuda